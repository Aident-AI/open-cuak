"use strict";(self.webpackChunktemp_docs=self.webpackChunktemp_docs||[]).push([[906],{3286:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"get-started","title":"Get Started","description":"Let\'s get started with Open Cuak in less than 5 minutes.","source":"@site/docs/get-started.md","sourceDirName":".","slug":"/get-started","permalink":"/docs/get-started","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Development","permalink":"/docs/category/development"}}');var s=t(4848),o=t(8453);const i={sidebar_position:1},a="Get Started",l={},c=[{value:"\ud83d\udc49 Start Local Production Build",id:"-start-local-production-build",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"get-started",children:"Get Started"})}),"\n",(0,s.jsx)(n.p,{children:"Let's get started with Open Cuak in less than 5 minutes."}),"\n",(0,s.jsx)(n.h3,{id:"-start-local-production-build",children:"\ud83d\udc49 Start Local Production Build"}),"\n",(0,s.jsxs)(n.ol,{start:"0",children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["(optional) Make sure you have ",(0,s.jsx)(n.a,{href:"https://brew.sh/",children:(0,s.jsx)(n.code,{children:"brew"})})," for package management"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"works on Mac and Linux. For Windows, use WSL2 for now."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n\n# (optional) on Linux, if `brew` command is not available in terminal, use this to register `brew`\ntest -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"\ntest -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"\necho "eval \\"\\$($(brew --prefix)/bin/brew shellenv)\\"" >> ~/.bashrc\n\n# (optional) verify the successful installation of `brew`\nbrew doctor\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Install Open-CUAK package"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"brew install Aident-AI/homebrew-tap/open-cuak\n\n# or use this to update to the latest version\nbrew update && brew upgrade Aident-AI/homebrew-tap/open-cuak\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Start Open-CUAK services"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"downloading images can take a while (Sorry! We will optimize this soon.)"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"open-cuak start\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Ta-da! It is now ready locally at ",(0,s.jsx)(n.a,{href:"http://localhost:11970",children:"http://localhost:11970"}),"."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Don't forget to go to the \u2699\ufe0f Configurations page to set your OpenAI or other major model API key to chat with Aiden!"}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var r=t(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);