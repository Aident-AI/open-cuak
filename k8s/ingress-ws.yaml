apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${AZURE_APP_NAME}-ws-ingress
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # WebSocket specific timeouts and settings:
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    # Standard WebSocket configuration
    nginx.ingress.kubernetes.io/websocket-services: "${AZURE_BROWSERLESS_SERVICE_NAME}"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    # Use standard WebSocket upgrade annotation
    nginx.ingress.kubernetes.io/upstream-hash-by: "$binary_remote_addr"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/enable-websocket: "true"
    service.beta.kubernetes.io/azure-load-balancer-resource-group: "${AZURE_RESOURCE_GROUP}"
    # Sticky sessions (if needed)
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "browserless_ws_affinity"
    nginx.ingress.kubernetes.io/session-cookie-expires: "86400"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "86400"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - ws.${AZURE_DOMAIN_NAME}
      secretName: ${AZURE_TLS_SECRET_NAME}-ws
  rules:
    - host: ws.${AZURE_DOMAIN_NAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ${AZURE_BROWSERLESS_SERVICE_NAME}
                port:
                  number: 50000
